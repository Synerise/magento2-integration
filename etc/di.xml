<?xml version="1.0" ?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
    <type name="Magento\Framework\Communication\Config\CompositeReader">
        <arguments>
            <argument name="readers" xsi:type="array">
                <item name="asyncServiceReader" xsi:type="array">
                    <item name="reader" xsi:type="object">Magento\WebapiAsync\Code\Generator\Config\RemoteServiceReader\Communication</item>
                    <item name="sortOrder" xsi:type="string">0</item>
                </item>
                <item name="xmlReader" xsi:type="array">
                    <item name="reader" xsi:type="object">Magento\Framework\Communication\Config\Reader\XmlReader</item>
                    <item name="sortOrder" xsi:type="string">10</item>
                </item>
                <item name="envReader" xsi:type="array">
                    <item name="reader" xsi:type="object">Magento\Framework\Communication\Config\Reader\EnvReader</item>
                    <item name="sortOrder" xsi:type="string">20</item>
                </item>
                <item name="remoteServiceReader" xsi:type="array">
                    <item name="reader" xsi:type="object">Magento\Framework\MessageQueue\Code\Generator\Config\RemoteServiceReader\Communication</item>
                    <item name="sortOrder" xsi:type="string">5</item>
                </item>
                <item name="syneriseReader" xsi:type="array">
                    <item name="reader" xsi:type="object">Synerise\Integration\MessageQueue\Config\Reader\Communication</item>
                    <item name="sortOrder" xsi:type="string">15</item>
                </item>
            </argument>
        </arguments>
    </type>
    <type name="Magento\Framework\MessageQueue\Topology\Config\CompositeReader">
        <arguments>
            <argument name="readers" xsi:type="array">
                <item name="remoteServiceReader" xsi:type="object" sortOrder="10">Magento\Framework\MessageQueue\Topology\Config\RemoteService\Reader</item>
                <item name="xmlReader" xsi:type="object" sortOrder="20">Magento\Framework\MessageQueue\Topology\Config\Xml\Reader</item>
                <item name="syneriseReader" xsi:type="object" sortOrder="30">Synerise\Integration\MessageQueue\Config\Reader\Topology</item>
            </argument>
        </arguments>
    </type>
    <type name="Magento\Framework\MessageQueue\Consumer\Config\CompositeReader">
        <arguments>
            <argument name="readers" xsi:type="array">
                <item name="xmlReader" xsi:type="object" sortOrder="10">Magento\Framework\MessageQueue\Consumer\Config\Xml\Reader</item>
                <item name="envReader" xsi:type="object" sortOrder="20">Magento\Framework\MessageQueue\Consumer\Config\Env\Reader</item>
                <item name="syneriseReader" xsi:type="object" sortOrder="15">Synerise\Integration\MessageQueue\Config\Reader\Consumer</item>
            </argument>
        </arguments>
    </type>
    <type name="Magento\Framework\MessageQueue\Publisher\Config\CompositeReader">
        <arguments>
            <argument name="readers" xsi:type="array">
                <item name="asyncServiceReader" xsi:type="object" sortOrder="0">Magento\WebapiAsync\Code\Generator\Config\RemoteServiceReader\Publisher</item>
                <item name="remoteServiceReader" xsi:type="object" sortOrder="10">Magento\Framework\MessageQueue\Publisher\Config\RemoteService\Reader</item>
                <item name="xmlReader" xsi:type="object" sortOrder="20">Magento\Framework\MessageQueue\Publisher\Config\Xml\Reader</item>
                <item name="envReader" xsi:type="object" sortOrder="30">Magento\Framework\MessageQueue\Publisher\Config\Env\Reader</item>
                <item name="syneriseReader" xsi:type="object" sortOrder="15">Synerise\Integration\MessageQueue\Config\Reader\Publisher</item>
            </argument>
        </arguments>
    </type>
    <type name="Synerise\Integration\MessageQueue\Publisher\Data\All">
        <arguments>
            <argument name="bulkManagement" xsi:type="object">Synerise\Integration\MessageQueue\BulkManagement</argument>
        </arguments>
    </type>
    <type name="Synerise\Integration\MessageQueue\Publisher\Data\Batch">
        <arguments>
            <argument name="bulkManagement" xsi:type="object">Synerise\Integration\MessageQueue\BulkManagement</argument>
        </arguments>
    </type>
    <type name="Synerise\Integration\MessageQueue\Publisher\Data\Scheduler">
        <arguments>
            <argument name="bulkManagement" xsi:type="object">Synerise\Integration\MessageQueue\BulkManagement</argument>
        </arguments>
    </type>
    <type name="Magento\Framework\View\Element\UiComponent\DataProvider\CollectionFactory">
        <arguments>
            <argument name="collections" xsi:type="array">
                <item name="synerise_workspace_listing_data_source" xsi:type="string">Synerise\Integration\Model\ResourceModel\Workspace\Grid\Collection</item>
                <item name="synerise_searchindex_listing_data_source" xsi:type="string">Synerise\Integration\Model\ResourceModel\SearchIndex\Grid\Collection</item>
            </argument>
        </arguments>
    </type>
    <virtualType name="Synerise\Integration\Model\ResourceModel\Workspace\Grid\Collection" type="Magento\Framework\View\Element\UiComponent\DataProvider\SearchResult">
        <arguments>
            <argument name="mainTable" xsi:type="string">synerise_workspace</argument>
            <argument name="resourceModel" xsi:type="string">Synerise\Integration\Model\ResourceModel\Workspace</argument>
        </arguments>
    </virtualType>
    <virtualType name="Synerise\Integration\Model\ResourceModel\SearchIndex\Grid\Collection" type="Magento\Framework\View\Element\UiComponent\DataProvider\SearchResult">
        <arguments>
            <argument name="mainTable" xsi:type="string">synerise_search_index</argument>
            <argument name="resourceModel" xsi:type="string">Synerise\Integration\Model\ResourceModel\SearchIndex</argument>
        </arguments>
    </virtualType>
    <type name="Magento\CustomerImportExport\Model\Import\Customer">
        <plugin name="synerise_customer_import" type="Synerise\Integration\Plugin\CustomerImport" />
    </type>
    <type name="Magento\CustomerImportExport\Model\Import\Address">
        <plugin name="synerise_customer_import" type="Synerise\Integration\Plugin\CustomerAddressImport" />
    </type>
    <type name="Magento\InventoryIndexer\Model\Queue\UpdateIndexSalabilityStatus">
        <plugin name="synerise_update_index_salability_status" type="Synerise\Integration\Plugin\ProductIndexSalability" />
    </type>
    <type name="Magento\CatalogImportExport\Model\Import\Product">
        <plugin name="synerise_product_import" type="Synerise\Integration\Plugin\ProductImport" />
    </type>
    <type name="Magento\Catalog\Model\Product\Action">
        <plugin name="synerise_product_action" type="Synerise\Integration\Plugin\ProductAction" />
    </type>
    <type name="Magento\CatalogInventory\Model\Indexer\Stock">
        <plugin name="synerise_indexer_stock" type="Synerise\Integration\Plugin\ProductIndexStock" />
    </type>
    <virtualType name="Synerise\Integration\Model\Logger" type="Magento\Framework\Logger\Monolog">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="debug" xsi:type="object">Synerise\Integration\Logger\Handler\Debug</item>
            </argument>
        </arguments>
    </virtualType>
    <type name="Synerise\Integration\Helper\Logger">
        <arguments>
            <argument name="logger" xsi:type="object">Synerise\Integration\Model\Logger</argument>
        </arguments>
    </type>

    <!-- Configuration: Catalog Search / Search Engine -->
    <type name="Magento\Search\Model\Adminhtml\System\Config\Source\Engine">
        <arguments>
            <argument name="engines" xsi:type="array">
                <item name="synerise_ai" xsi:type="string">Synerise AI Search</item>
            </argument>
        </arguments>
    </type>
    <type name="Magento\Search\Model\EngineResolver">
        <arguments>
            <argument name="engines" xsi:type="array">
                <item name="synerise_ai" xsi:type="string">synerise_ai</item>
            </argument>
        </arguments>
    </type>
    <type name="Magento\CatalogSearch\Model\ResourceModel\EngineProvider">
        <arguments>
            <argument name="engines" xsi:type="array">
                <item name="synerise_ai" xsi:type="string">Magento\Elasticsearch\Model\ResourceModel\Engine</item>
            </argument>
        </arguments>
    </type>
    <type name="Magento\Search\Model\SearchEngine\Validator">
        <arguments>
            <argument name="engineValidators" xsi:type="array">
                <item name="synerise_ai" xsi:type="object">Synerise\Integration\Search\Validator</item>
            </argument>
        </arguments>
    </type>

    <!-- Quick search -->
    <virtualType name="elasticsearchLayerSearchItemCollectionProvider" type="Magento\Elasticsearch\Model\Layer\Search\ItemCollectionProvider">
        <arguments>
            <argument name="factories" xsi:type="array">
                <item name="synerise_ai" xsi:type="object">syneriseAiFulltextSearchCollectionFactory</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="syneriseAiFulltextSearchCollectionFactory" type="elasticsearchFulltextSearchCollectionFactory">
        <arguments>
            <argument name="instanceName" xsi:type="string">syneriseAiFulltextSearchCollection</argument>
        </arguments>
    </virtualType>
    <virtualType name="syneriseAiFulltextSearchCollection" type="elasticsearchFulltextSearchCollection">
        <arguments>
            <argument name="search" xsi:type="object">Synerise\Integration\Search\FullTextSearch</argument>
        </arguments>
    </virtualType>
    <type name="Synerise\Integration\SyneriseApi\Mapper\Search\FullText">
        <arguments>
            <argument name="filters" xsi:type="object">searchFiltersMapper</argument>
        </arguments>
    </type>
    <virtualType name="searchFiltersMapper" type="Synerise\Integration\SyneriseApi\Mapper\Search\FullText\Filters">
        <arguments>
            <argument name="filterList" xsi:type="object">searchFilterList</argument>
        </arguments>
    </virtualType>

    <!-- Category listing -->
    <virtualType name="elasticsearchLayerCategoryItemCollectionProvider">
        <arguments>
            <argument name="factories" xsi:type="array">
                <item name="synerise_ai" xsi:type="object">syneriseAiCategoryCollectionFactory</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="syneriseAiCategoryCollection" type="Magento\CatalogSearch\Model\ResourceModel\Fulltext\Collection">
        <arguments>
            <argument name="search" xsi:type="object">Synerise\Integration\Search\ListingSearch </argument>
            <argument name="searchRequestName" xsi:type="string">catalog_view_container</argument>
            <argument name="searchCriteriaResolverFactory" xsi:type="object">elasticsearchSearchCriteriaResolverFactory</argument>
            <argument name="searchResultApplierFactory" xsi:type="object">elasticsearchSearchResultApplier\Factory</argument>
            <argument name="totalRecordsResolverFactory" xsi:type="object">elasticsearchTotalRecordsResolver\Factory</argument>
            <argument name="defaultFilterStrategyApplyChecker" xsi:type="object">Magento\Elasticsearch\Model\ResourceModel\Fulltext\Collection\DefaultFilterStrategyApplyChecker</argument>
        </arguments>
    </virtualType>
    <virtualType name="syneriseAiCategoryCollectionFactory" type="Magento\CatalogSearch\Model\ResourceModel\Fulltext\SearchCollectionFactory">
        <arguments>
            <argument name="instanceName" xsi:type="string">syneriseAiCategoryCollection</argument>
        </arguments>
    </virtualType>
    <type name="Synerise\Integration\SyneriseApi\Mapper\Search\Listing">
        <arguments>
            <argument name="filters" xsi:type="object">categoryFiltersMapper</argument>
        </arguments>
    </type>
    <virtualType name="categoryFiltersMapper" type="Synerise\Integration\SyneriseApi\Mapper\Search\FullText\Filters">
        <arguments>
            <argument name="filterList" xsi:type="object">categoryFilterList</argument>
        </arguments>
    </virtualType>

    <!-- Search frontend scripts -->
    <type name="Magento\Framework\RequireJs\Config\File\Collector\Aggregated">
        <plugin name="syneriseFilterList" type="Synerise\Integration\Plugin\RequireJs\Config\File\Collector\Aggregated" />
    </type>

    <!-- Search indexer disabled -->
    <type name="Magento\CatalogSearch\Model\Indexer\IndexerHandlerFactory">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="synerise_ai" xsi:type="string">Synerise\Integration\Model\Search\Indexer\IndexerHandler</item>
            </argument>
        </arguments>
    </type>
    <type name="Magento\Indexer\Model\Config">
        <plugin name="synerise_customer_import" type="Synerise\Integration\Plugin\IndexerConfig" />
    </type>

    <!-- Search suggestions -->
    <type name="Magento\AdvancedSearch\Model\SuggestedQueries">
        <arguments>
            <argument name="data" xsi:type="array">
                <item name="synerise_ai" xsi:type="string">Synerise\Integration\Search\DataProvider\Suggestions</item>
            </argument>
        </arguments>
    </type>

    <!-- Search autocomplete -->
    <preference for="Magento\Search\Model\AutocompleteInterface" type="Synerise\Integration\Search\AutocompleteProxy" />
    <type name="Synerise\Integration\Search\Autocomplete">
        <arguments>
            <argument name="dataProviders" xsi:type="array">
                <item name="10" xsi:type="object">Synerise\Integration\Search\DataProvider\Autocomplete\Term</item>
                <item name="20" xsi:type="object">Synerise\Integration\Search\DataProvider\Autocomplete\Product</item>
            </argument>
        </arguments>
    </type>

    <!-- Search bucket builder -->
    <preference for="\Synerise\Integration\Search\SearchResponse\Aggregation\BucketBuilderFactoryProviderInterface" type="\Synerise\Integration\Search\SearchResponse\Aggregation\BucketBuilderFactoryProvider"/>
    <type name="Synerise\Integration\Search\SearchResponse\Aggregation\BucketBuilderFactoryProvider">
        <arguments>
            <argument name="engines" xsi:type="array">
                <item name="default" xsi:type="string">defaultBucketBuilderFactory</item>
            </argument>
        </arguments>
    </type>
    <virtualType name="defaultBucketBuilderFactory" type="Synerise\Integration\Search\SearchResponse\Aggregation\BucketBuilderFactory">
        <arguments>
            <argument name="types" xsi:type="array">
                <item name="default" xsi:type="string">Synerise\Integration\Search\SearchResponse\Aggregation\Bucket\AttributeBuilder</item>
                <item name="price" xsi:type="string">Synerise\Integration\Search\SearchResponse\Aggregation\Bucket\PriceBuilder</item>
            </argument>
        </arguments>
    </virtualType>
</config>